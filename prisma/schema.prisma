// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                     String        @id @default(auto()) @map("_id") @db.ObjectId
  username               String
  email                  String        @unique
  phoneNumber            String        @unique
  password               String
  isLandord              Boolean       @default(false)
  isTenant               Boolean       @default(true)
  isAgent                Boolean       @default(false)
  isVerified             Boolean       @default(false)
  googleId               String?       @map("google_id")
  verificationOtp        String?
  verificationOtpExpires DateTime?
  createdAt              DateTime      @default(now())
  updatedAt              DateTime      @updatedAt
  Property               Property[]
  applcations            application[]
}

model Property {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  price       Float
  bedrooms    Int
  bathrooms   Int
  location    String
  images      String[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  userId      String        @db.ObjectId
  user        User          @relation(fields: [userId], references: [id])
  applcations application[]

  @@index([userId], name: "userId")
}

model application {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  User       User?     @relation(fields: [userId], references: [id])
  userId     String?   @db.ObjectId
  status     status    @default(PENDING)
  Property   Property? @relation(fields: [propertyId], references: [id])
  propertyId String?   @db.ObjectId
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

enum status {
  PENDING
  APPROVED
  REJECTED
}
